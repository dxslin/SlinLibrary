
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: "../../ConfigProperties.gradle"

import com.slin.version.plugin.*

//是否使用Release Lib
def useReleaseLib = false

android {
    signingConfigs {
        release {
            storeFile rootProject.file(configProperty('sign_file'))
            storePassword configProperty('store_password')
            keyAlias = configProperty('key_alias')
            keyPassword configProperty('key_password')
        }
    }
    compileSdkVersion Versions.androidSdk
    buildToolsVersion Versions.androidBuildTools
    defaultConfig {
        applicationId "com.slin.slindialog"
        minSdkVersion Versions.androidMinSdk
        targetSdkVersion Versions.androidSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility Versions.javaVersion
        targetCompatibility Versions.javaVersion
    }
    buildFeatures {
        dataBinding = true
        //如果使用dataBinding的话，只设置dataBinding的话不会自动生成对应的binding文件，需要编译才行，因此添加此设置
        viewBinding = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation Libs.Kotlin.stdlib
    implementation Libs.AndroidX.appcompat
    implementation Libs.AndroidX.swipeRefreshLayout

    implementation Libs.AndroidX.material
    implementation Libs.AndroidX.constraintLayout
    implementation Libs.AndroidX.recyclerView
    implementation Libs.AndroidX.cardView
    implementation Libs.AndroidX.vectorDrawable
    implementation Libs.AndroidX.navigationFragment
    implementation Libs.AndroidX.navigationUi
    implementation Libs.AndroidX.navigationFragmentKtx
    implementation Libs.AndroidX.navigationUiKtx
    implementation Libs.AndroidX.dynamicAnimation
//    implementation Libs.lifecycle_extensions
//    implementation Libs.lifecycle_runtime

    implementation Libs.Helper.recyclerViewAdapterHelper

    implementation Libs.Jetpack.hilt
    kapt Libs.Jetpack.hiltCompiler
    implementation Libs.Jetpack.hiltViewModel
    kapt Libs.Jetpack.hiltViewModelCompiler

    if(useReleaseLib){
        implementation Libs.Slin.score
        implementation Libs.Slin.scoreMvi
        implementation Libs.Slin.viewBindingExt
        implementation Libs.Slin.dialog
        implementation Libs.Slin.viewPagerIndicator
        implementation Libs.Slin.stateViewSwitcher
    } else {
        implementation project(path: ':SlinDialog')
        implementation project(path: ':ViewPagerIndicator')
        implementation project(path: ':Score')
        implementation project(path: ':Score:mvi')
        implementation project(path: ':ViewBindingExt')
        implementation project(path: ':StateViewSwitcher:score-ext')
    }

    //    test
    testImplementation Libs.Test.junit
    androidTestImplementation Libs.Test.junitExt
    androidTestImplementation Libs.Test.espressoCore

}
