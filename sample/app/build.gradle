
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: "../../ConfigProperties.gradle"

import com.slin.version.plugin.*

//是否使用Release Lib
def useReleaseLib = false

android {
    signingConfigs {
        release {
            storeFile rootProject.file(configProperty('sign_file'))
            storePassword configProperty('store_password')
            keyAlias = configProperty('key_alias')
            keyPassword configProperty('key_password')
        }
    }
    compileSdkVersion Versions.androidSdk
    buildToolsVersion Versions.androidBuildTools
    defaultConfig {
        applicationId "com.slin.slindialog"
        minSdkVersion Versions.androidMinSdk
        targetSdkVersion Versions.androidSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding = true
        //如果使用dataBinding的话，只设置dataBinding的话不会自动生成对应的binding文件，需要编译才行，因此添加此设置
        viewBinding = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation Dependencies.kotlin_stdlib
    implementation Dependencies.appcompat
    implementation Dependencies.swipe_refresh_layout

    implementation Dependencies.material
    implementation Dependencies.constraintlayout
    implementation Dependencies.recycler_view
    implementation Dependencies.card_view
    implementation Dependencies.vector_drawable
    implementation Dependencies.navigation_fragment
    implementation Dependencies.navigation_ui
    implementation Dependencies.navigation_fragment_ktx
    implementation Dependencies.navigation_ui_ktx
    implementation Dependencies.dynamic_animation
//    implementation Dependencies.lifecycle_extensions
//    implementation Dependencies.lifecycle_runtime

    implementation Dependencies.recycler_view_adapter_helper

    implementation Dependencies.hilt
    kapt Dependencies.hilt_compiler
    implementation Dependencies.hilt_viewmodel
    kapt Dependencies.hilt_viewmodel_compiler

    if(useReleaseLib){
        implementation Dependencies.score
        implementation Dependencies.view_binding_ext
        implementation Dependencies.slin_dialog
        implementation Dependencies.view_pager_indicator
    } else {
        implementation project(path: ':SlinDialog')
        implementation project(path: ':ViewPagerIndicator')
        implementation project(path: ':Score')
        implementation project(path: ':ViewBindingExt')
        implementation project(path: ':StateViewSwitcher:score-ext')
    }

    //    test
    testImplementation Dependencies.junit
    androidTestImplementation Dependencies.junit_ext
    androidTestImplementation Dependencies.espresso_core

}
